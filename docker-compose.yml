services:

#------------------------------------

  postgres:
    image: postgres
    container_name: my-postgres-2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwer4617
    ports:
      - 4032:5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - my-pg-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

#------------------------------------

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-2
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 4080:80
    entrypoint: ["sh", "-c", "sudo chmod +x ./auto_connect.sh && ./auto_connect.sh"]
    volumes:
      - my-pg-admin:/var/lib/pgadmin
      - ./scripts/pg-admin-scripts:/scripts
    working_dir: /scripts
    depends_on:
      postgres:
        condition: service_healthy

#------------------------------------

  task-container:
    build: .
    container_name: task-container-go 
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy

#------------------------------------

  grafana:
    image: grafana/grafana-oss
    container_name: grafana2025
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

#------------------------------------

  prometheus:
    image: prom/prometheus
    container_name: prometheus2025
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

#------------------------------------
  node-exporter:
    image: prom/node-exporter
    container_name: exporter2025
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'

#------------------------------------      

volumes:
  my-pg-volume: {}
  my-pg-admin: {}
  task-container:
  grafana-storage: {}
  prometheus-data: {}